#include <stdio.h>
#include <stdlib.h>

typedef unsigned short WORD;
typedef unsigned int DWORD;
 
//14字节bmp文件头
typedef struct BMP_FILE_HEADER
{
    WORD bType;         
    DWORD bSize;         
    WORD bReserved1;    
    WORD bReserved2;      
    DWORD bOffset;          
} BITMAPFILEHEADER;
 
//40字节bmp信息头
typedef struct BMP_INFO
{
    DWORD bInfoSize;     
    DWORD biWidth;       
    DWORD biHeight;   
    WORD bPlanes;        
    WORD bBitCount;     
    DWORD bCompression;  
    DWORD bmpImageSize;
    DWORD bXPelsPerMeter; 
    DWORD bYPelsPerMeter;  
    DWORD bClrUsed;     
    DWORD bClrImportant;
} BITMAPINFOHEADER;

void main()
{
	FILE *bmp_file_in;
	FILE *bmp_file_out;

	bmp_file_in = fopen("input.bmp", "rb");

	BITMAPFILEHEADER file_header;
	BITMAPINFOHEADER info_header;
	
	//读写文件头
	fread(&file_header, sizeof(unsigned char), 14, bmp_file_in);
	fread(&info_header, sizeof(unsigned char), 40, bmp_file_in);

	//获取输入图像大小
	const int width = info_header.biWidth;
	const int height = info_header.biHeight;

	int i, j;
	int counter = 0;
	unsigned char temp[3];
	unsigned char t;
	for (j = 0; j < height; j++)
	{
		for (i = 0; i < width; i++)
		{
			fread(temp, sizeof(unsigned char), 3, bmp_file_in);
			if((temp[0] != temp[1]) || (temp[1] != temp[2]))
				counter++;
		}
		//fseek(bmp_file_in, 2, SEEK_CUR);
		fread(&t, 1, 1, bmp_file_in);
		printf("%d\t", t);
		fread(&t, 1, 1, bmp_file_in);
		printf("%d\t", t);
	}
	printf("\ncounter = %d\n", counter);
		
}

















